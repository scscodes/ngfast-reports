/**
 * Breakpoint mixins for responsive design
 * Usage:
 * @include breakpoint(sm) { ... }
 * @include breakpoint(md) { ... }
 * @include breakpoint(lg) { ... }
 * @include breakpoint(xl) { ... }
 */

@use 'sass:map';

// Breakpoint map
$breakpoints: (
    xs: 0,         // Default (Mobile-first)
    sm: 576px,     // Small (Tablets)
    md: 768px,     // Medium (Small Laptops)
    lg: 992px,     // Large (Desktops)
    xl: 1200px,    // Extra Large (Large Screens)
    xxl: 1400px    // 4K+ Screens
);

// Mixin for min-width breakpoints
@mixin breakpoint($point) {
  @if map.has-key($breakpoints, $point) {
    @media (min-width: map.get($breakpoints, $point)) {
      @content;
    }
  }
  @else {
    @warn "Breakpoint '#{$point}' not found in $breakpoints map.";
  }
}

// Mixin for max-width breakpoints
@mixin breakpoint-down($point) {
  @if map.has-key($breakpoints, $point) {
    @media (max-width: (map.get($breakpoints, $point) - 1)) {
      @content;
    }
  }
  @else {
    @warn "Breakpoint '#{$point}' not found in $breakpoints map.";
  }
}

// Container widths
.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 1rem;
  padding-left: 1rem;

  @include breakpoint(sm) {
    max-width: 540px;
  }

  @include breakpoint(md) {
    max-width: 720px;
  }

  @include breakpoint(lg) {
    max-width: 960px;
  }

  @include breakpoint(xl) {
    max-width: 1140px;
  }

  @include breakpoint(xxl) {
    max-width: 1320px;
  }
}

// Responsive font sizes
:root {
  --base-font-size: 16px;
  
  @include breakpoint(md) {
    --base-font-size: 17px;
  }
  
  @include breakpoint(lg) {
    --base-font-size: 18px;
  }
}

// Responsive spacing
:root {
  --spacing-unit: 1rem;
  
  @include breakpoint(md) {
    --spacing-unit: 1.25rem;
  }
  
  @include breakpoint(lg) {
    --spacing-unit: 1.5rem;
  }
}
