/**
 * Visibility Utilities
 * 
 * Provides classes for showing/hiding elements based on viewport size
 * Uses the standardized breakpoint system
 * 
 * Usage:
 * <div class="hidden">Never shown</div>
 * <div class="show-mobile">Only visible on mobile</div>
 * <div class="show-desktop">Only visible on desktop</div>
 * <div class="hide-mobile">Hidden on mobile</div>
 * <div class="hide-desktop">Hidden on desktop</div>
 */

@use '../abstracts/breakpoints' as break;

// Always hidden
.hidden {
  display: none !important;
}

// Mobile-first visibility classes
.show-mobile {
  display: block;

  @include break.breakpoint(md) {
    display: none;
  }

  // Handle inline elements
  &.inline {
    display: inline;

    @include break.breakpoint(md) {
      display: none;
    }
  }

  // Handle flex elements
  &.flex {
    display: flex;

    @include break.breakpoint(md) {
      display: none;
    }
  }
}

.show-desktop {
  display: none;

  @include break.breakpoint(md) {
    display: block;
  }

  // Handle inline elements
  &.inline {
    display: none;

    @include break.breakpoint(md) {
      display: inline;
    }
  }

  // Handle flex elements
  &.flex {
    display: none;

    @include break.breakpoint(md) {
      display: flex;
    }
  }
}

// Hide on specific breakpoints
.hide-mobile {
  display: none;

  @include break.breakpoint(md) {
    display: block;
  }
}

.hide-desktop {
  display: block;

  @include break.breakpoint(md) {
    display: none;
  }
}

// Screen reader only
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}