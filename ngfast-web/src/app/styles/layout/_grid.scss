/**
 * Grid system with responsive containers and flexbox-based rows/columns
 * Mobile-first design with breakpoint-based scaling
 */

@use '../abstracts/breakpoints' as break;

// Container widths
.container {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-right: 1rem;
    padding-left: 1rem;
  
    @include break.breakpoint(sm) {
      max-width: 540px;
    }
  
    @include break.breakpoint(md) {
      max-width: 720px;
    }
  
    @include break.breakpoint(lg) {
      max-width: 960px;
    }
  
    @include break.breakpoint(xl) {
      max-width: 1140px;
    }
  
    @include break.breakpoint(xxl) {
      max-width: 1320px;
    }
}

// Flexbox row with responsive direction
.row {
    display: flex;
    flex-direction: column;
    margin: -0.5rem;  // Compensate for column padding

    @include break.breakpoint(md) {
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
    }
}
  
// Basic column
.col {
    flex: 1;
    padding: 0.5rem;
    min-width: 0; // Prevent flex items from overflowing
}

// Responsive column variants
@for $i from 1 through 12 {
    .col-#{$i} {
        flex: 0 0 auto;
        padding: 0.5rem;
        width: 100%;

        @include break.breakpoint(md) {
            width: ($i / 12) * 100%;
        }
    }
}

// Column order utilities
.col-first {
    order: -1;
}

.col-last {
    order: 13;
}

@include break.breakpoint(md) {
    .col-md-first {
        order: -1;
    }

    .col-md-last {
        order: 13;
    }
}